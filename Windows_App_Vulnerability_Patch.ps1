# Made by Kerrigan Taiga
# Updated 01/12/2023
# Make a folder temp under C:\

Write-Output "Starting Script"

# Set to True to turn on 

$UpdateHEVC = "False"
$UpdateHEIF = "False"
$UpdateMPEG2 = "False"
$UpdateWebMedia = "False"
$UpdatePaint3D = "False"
$UpdatePhoto = "False"
$Update3DViewer = "False"
$UpdateVP9 = "False"
$UpdateAV1 = "False"
$UpdateCalculator = "False"
$UpdateWebp = "False"

$DownloadPath = "c:\temp\"
$SleepAfterInstalls ="60"

# Don't edit pass this 

$HEVCFILE = "Microsoft.HEVCVideoExtension_2.0.60091.0_x64__8wekyb3d8bbwe.Appx"
$HEIFFILE = "Microsoft.HEIFImageExtension_1.0.43012.0_x64__8wekyb3d8bbwe.appx"
$MPEG2FILE = "Microsoft.MPEG2VideoExtension_1.0.50901.0_x64__8wekyb3d8bbwe.Appx"
$WebMediaFILE = "Microsoft.WebMediaExtensions_1.0.42192.0_neutral_~_8wekyb3d8bbwe.appxbundle"
$Paint3DFILE = "Microsoft.MSPaint_2022.2203.1037.0_neutral___8wekyb3d8bbwe.AppxBundle"
$PhotoFILE = "Microsoft.Windows.Photos_2022.30120.12007.0_neutral___8wekyb3d8bbwe.AppxBundle"
$3DViewerFILE = "Microsoft.Microsoft3DViewer_2022.2211.24012.0_neutral___8wekyb3d8bbwe.AppxBundle"
$VP9FILE = "Microsoft.VP9VideoExtensions_1.0.52781.0_x64__8wekyb3d8bbwe.Appx"
$AV1FILE = "Microsoft.AV1VideoExtension_1.1.52851.0_x64__8wekyb3d8bbwe.Appx"
$CalculatorFILE = "Microsoft.WindowsCalculator_2020.2103.8.0_neutral___8wekyb3d8bbwe.AppxBundle"
$UIXaml2FILE = "Microsoft.UI.Xaml.2.4_2.42007.9001.0_x64__8wekyb3d8bbwe.Appx"
$WebpFILE = "Microsoft.WebpImageExtension_1.0.52351.0_x64__8wekyb3d8bbwe.Appx"
$VCLibsFILE ="Microsoft.VCLibs.140.00_14.0.30704.0_x64__8wekyb3d8bbwe.Appx"

$HEVCURL = "https://github.com/Kavex/WindowsStoreApps/releases/download/Microsoft_HEVC_Video_Extension/Microsoft.HEVCVideoExtension_2.0.60091.0_x64__8wekyb3d8bbwe.Appx"
$HEIFURL = "https://github.com/Kavex/WindowsStoreApps/releases/download/Microsoft_HEIF_Image_Extension/Microsoft.HEIFImageExtension_1.0.43012.0_x64__8wekyb3d8bbwe.appx"
$MPEG2URL = "https://github.com/Kavex/WindowsStoreApps/releases/download/Microsoft_MPEG2_Video_Extension/Microsoft.MPEG2VideoExtension_1.0.50901.0_x86__8wekyb3d8bbwe.Appx"
$WebMediaURL = "https://github.com/Kavex/WindowsStoreApps/releases/download/Microsoft_Web_Media_Extensions/Microsoft.WebMediaExtensions_1.0.42192.0_neutral_._8wekyb3d8bbwe.appxbundle"
$Paint3DURL = "https://github.com/Kavex/WindowsStoreApps/releases/download/Microsoft_3D_Paint/Microsoft.MSPaint_2022.2203.1037.0_neutral___8wekyb3d8bbwe.AppxBundle"
$PhotoURL = "https://github.com/Kavex/WindowsStoreApps/releases/download/Microsoft_Windows_Photos/Microsoft.Windows.Photos_2022.30120.12007.0_neutral___8wekyb3d8bbwe.AppxBundle"
$3DViewerURL = "https://github.com/Kavex/WindowsStoreApps/releases/download/Microsoft_3D_Viewer/Microsoft.Microsoft3DViewer_2022.2211.24012.0_neutral___8wekyb3d8bbwe.AppxBundle"
$VP9URL = "https://github.com/Kavex/WindowsStoreApps/releases/download/MicrosoftVP9VideoExtensions/Microsoft.VP9VideoExtensions_1.0.52781.0_x64__8wekyb3d8bbwe.Appx"
$AV1URL = "https://github.com/Kavex/WindowsStoreApps/releases/download/Microsoft_AV1_Video_Extension/Microsoft.AV1VideoExtension_1.1.52851.0_x64__8wekyb3d8bbwe.Appx"
$CalculatorURL = "https://github.com/Kavex/WindowsStoreApps/releases/download/Windows_Calculator/Microsoft.WindowsCalculator_2020.2103.8.0_neutral___8wekyb3d8bbwe.AppxBundle"
$UIXaml2URL = "https://github.com/Kavex/WindowsStoreApps/releases/download/Windows_Calculator/Microsoft.UI.Xaml.2.4_2.42007.9001.0_x64__8wekyb3d8bbwe.Appx"
$WebpURL = "https://github.com/Kavex/WindowsStoreApps/releases/download/Webp_Image_Extensions/Microsoft.WebpImageExtension_1.0.52351.0_x64__8wekyb3d8bbwe.Appx"
$VCLibsURL = "https://github.com/Kavex/WindowsStoreApps/releases/download/Libary/Microsoft.VCLibs.140.00_14.0.30704.0_x64__8wekyb3d8bbwe.Appx"

$RunHEVC = $UpdateHEVC
$RunHEIF = $UpdateHEIF
$RunMPEG2 = $UpdateMPEG2
$RunWebMedia = $UpdateWebMedia
$RunPaint3D = $UpdatePaint3D
$RunPhoto = $UpdatePhoto
$Run3DViewer = $Update3DViewer
$RunVP9 = $UpdateVP9
$RunAV1 = $UpdateAV1
$RunCalculator = $UpdateCalculator
$RunWebp = $UpdateWebp

if ($RunHEVC -eq "True")
{
    $CurrentURL = $HEVCURL
    $CurrentFILE = $HEVCFILE 
    Write-Output "Downloading $CurrentFILE"
    cd $DownloadPath
    Invoke-WebRequest -Uri $CurrentURL -OutFile $CurrentFILE
    Write-Output "Installing $CurrentFILE"
    add-appxpackage -Path ".\$CurrentFILE"
}

if ($RunHEIF -eq "True")
{
    $CurrentURL = $HEIFURL
    $CurrentFILE = $HEIFFILE 
    Write-Output "Downloading $CurrentFILE"
    cd $DownloadPath
    Invoke-WebRequest -Uri $CurrentURL -OutFile $CurrentFILE
    Write-Output "Installing $CurrentFILE"
    add-appxpackage -Path ".\$CurrentFILE"
}

if ($RunMPEG2 -eq "True")
{
    $CurrentURL = $MPEG2URL
    $CurrentFILE = $MPEG2FILE 
    Write-Output "Downloading $CurrentFILE"
    cd $DownloadPath
    Invoke-WebRequest -Uri $CurrentURL -OutFile $CurrentFILE
    Write-Output "Installing $CurrentFILE"
    add-appxpackage -Path ".\$CurrentFILE"
}

if ($RunWebMedia -eq "True")
{
    $CurrentURL = $WebMediaURL
    $CurrentFILE = $WebMediaFILE 
    Write-Output "Downloading $CurrentFILE"
    cd $DownloadPath
    Invoke-WebRequest -Uri $CurrentURL -OutFile $CurrentFILE
    Write-Output "Installing $CurrentFILE"
    add-appxpackage -Path ".\$CurrentFILE"
}

if ($RunPaint3D -eq "True")
{
    $CurrentURL = $Paint3DURL
    $CurrentFILE = $Paint3DFILE 
    Write-Output "Downloading $CurrentFILE"
    cd $DownloadPath
    Invoke-WebRequest -Uri $CurrentURL -OutFile $CurrentFILE
    Write-Output "Installing $CurrentFILE"
    add-appxpackage -Path ".\$CurrentFILE"
}

if ($RunPhoto -eq "True")
{
    $CurrentURL = $PhotoURL
    $CurrentFILE = $PhotoFILE 
    Write-Output "Downloading $CurrentFILE"
    cd $DownloadPath
    Invoke-WebRequest -Uri $CurrentURL -OutFile $CurrentFILE
    Write-Output "Installing $CurrentFILE"
    add-appxpackage -Path ".\$CurrentFILE"
}

if ($Run3DViewer -eq "True")
{
	$CurrentURL = $VCLibsURL
    $CurrentFILE = $VCLibsFILE
    Write-Output "Downloading $CurrentFILE"
    cd $DownloadPath
    Invoke-WebRequest -Uri $CurrentURL -OutFile $CurrentFILE
    Write-Output "Installing $CurrentFILE"
    add-appxpackage -Path ".\$CurrentFILE"
	
    $CurrentURL = $3DViewerURL
    $CurrentFILE = $3DViewerFILE 
    Write-Output "Downloading $CurrentFILE"
    cd $DownloadPath
    Invoke-WebRequest -Uri $CurrentURL -OutFile $CurrentFILE
    Write-Output "Installing $CurrentFILE"
    add-appxpackage -Path ".\$CurrentFILE"
  
}

if ($RunVP9 -eq "True")
{
    $CurrentURL = $VP9URL
    $CurrentFILE = $VP9FILE 
    Write-Output "Downloading $CurrentFILE"
    cd $DownloadPath
    Invoke-WebRequest -Uri $CurrentURL -OutFile $CurrentFILE
    Write-Output "Installing $CurrentFILE"
    add-appxpackage -Path ".\$CurrentFILE"
}

if ($RunAV1 -eq "True")
{
    $CurrentURL = $AV1URL
    $CurrentFILE = $AV1FILE 
    Write-Output "Downloading $CurrentFILE"
    cd $DownloadPath
    Invoke-WebRequest -Uri $CurrentURL -OutFile $CurrentFILE
    Write-Output "Installing $CurrentFILE"
    add-appxpackage -Path ".\$CurrentFILE"
}

if ($RunCalculator -eq "True")
{
    $CurrentURL = $UIXaml2URL
    $CurrentFILE = $UIXaml2FILE 
    Write-Output "Downloading $CurrentFILE"
    cd $DownloadPath
    Invoke-WebRequest -Uri $CurrentURL -OutFile $CurrentFILE
    Write-Output "Installing $CurrentFILE"
    add-appxpackage -Path ".\$CurrentFILE"

    $CurrentURL = $CalculatorURL
    $CurrentFILE = $CalculatorFILE
    Write-Output "Downloading $CurrentFILE"
    cd $DownloadPath
    Invoke-WebRequest -Uri $CurrentURL -OutFile $CurrentFILE
    Write-Output "Installing $CurrentFILE"
    add-appxpackage -Path ".\$CurrentFILE"
	Get-AppxPackage -allusers *windowscalculator* | Foreach {Add-AppxPackage -DisableDevelopmentMode -Register “$($_.InstallLocation)\AppXManifest.xml”}
}

if ($RunWebp -eq "True")
{
    $CurrentURL = $WebpURL
    $CurrentFILE = $WebpFILE 
    Write-Output "Downloading $CurrentFILE"
    cd $DownloadPath
    Invoke-WebRequest -Uri $CurrentURL -OutFile $CurrentFILE
    Write-Output "Installing $CurrentFILE"
    add-appxpackage -Path ".\$CurrentFILE"
}

Write-Output "Waiting for Installs to Finish"
Start-Sleep -Seconds $SleepAfterInstalls
Write-Output "Deleteing Downloaded Files"
cd $DownloadPath
#Remove-Item '*' -Recurse -Include *.AppxBundle
#Remove-Item '*' -Recurse -Include *.Appx

Write-Output "Exporting List of installed Windows Apps"
Get-AppxPackage –AllUsers | Out-File "C:\temp\WindowsAppsInstalled.log" -Append -force